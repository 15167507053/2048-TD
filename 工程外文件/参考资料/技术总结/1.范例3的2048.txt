程序的运行流程为
  在游戏开始时【初始化棋盘】（清理场地、创建行和列的列表、随机生成两个方块
  获取到【输入】时判断方向 调用移动方法 将行/列逐行作为参数传递
  移动方法获取到单个行/列后 逐个进行判断 【移动】方块（逐行将方块的值传给附近的方块并清空自身，移动前先关闭所有的可合并标签
  在检测到有效【合并】时 打开合并开关 更新数字和改变方块的显示样式 并清除前一位的方块
  合并后更新分数 同时判断是否胜利
  移动结束后更新棋盘的信息 生成新方块 并检查游戏是否失败
  胜利或失败发生时显示界面


项目一共用到了6个脚本 分别为【主控】【输入】【触屏输入】【方块】【方块样式】【分数】
【主控】中主要实现了
  初始化棋盘
  按钮事件的绑定
  检测空白位置生成新方块
  处理输入
  合并开关的管理
  移动与合并方块（横+纵）
  方块移动后的处理（新方块的生成、检查棋盘）
  更新空方快列表
  检查是否还有可移动的方块
  胜利和失败界面的管理
  利用协程进行延时（配合动画

【方块】
  获得并储存 数字、坐标、合并发生与否 等信息
  根据从主控函数中被调用的结果 决定是否显示
  当决定显示（数字不等于0）时 调用样式脚本确定显示的样式

【方块样式】
  指定方块的背景色、数字和字体色（从外部
  当被方块脚本调用时 告知此时应有的样式

【分数】
  初始化最高分和当前分
  被主控调用 接收到分数并实时更新当前分
  当前分>最高分时 更新最高记录

【输入】
  根据输入确定移动方向

【触控】
  判断移动方向 调用输入脚本传输移动方向


UI列表
Canvas
	Panel（游戏背景）
		Button
		Image(当前分数)
		Image(最高分数)
			Title
			Number
		Create Empty（棋盘载体）
			Image(棋盘)
				Image(方块)
					Panel（颜色）
						Text（文字）
				Tile*15
	Panel(游戏结束)
		Text（游戏失败信息）
		Text（游戏胜利信息）
		Text（分数）
		Button（重来）